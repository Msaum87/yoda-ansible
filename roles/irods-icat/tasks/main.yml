---
# copyright Utrecht University

- name: Download iRODS iCAT server rpm
  get_url:
    url='{{ irods_icat.url }}/{{ irods_icat.filename }}'
    dest='{{ rpm_dest_dir }}/{{ irods_icat.filename }}'
    checksum='{{ irods_icat.checksum }}'


- name: Download iRODS database plugin rpm
  get_url:
    url='{{ irods_db.url }}/{{ irods_db.filename }}'
    dest='{{ rpm_dest_dir }}/{{ irods_db.filename }}'
    checksum='{{ irods_db.checksum }}'


- name: Ensure iRODS iCommands are absent
  package:
    name='irods-icommands'
    state=absent


- name: Ensure iRODS iCAT server and database plugin are present
  package:
    name='{{ item }}'
    state=present
  with_items:
    - '{{ rpm_dest_dir }}/{{ irods_icat.filename }}'
    - '{{ rpm_dest_dir }}/{{ irods_db.filename }}'


- name: Generate zone key
  command: 'openssl rand -hex 16'
  register: zone_key
  args:
    creates: /home/{{ ansible_ssh_user }}/setup_irods


- name: Store zone key in variable
  set_fact:
    irods_zone_key: '{{ zone_key.stdout }}'


- name: Generate negotiation key
  command: 'openssl rand -hex 16'
  register: negotiation_key
  args:
    creates: /home/{{ ansible_ssh_user }}/setup_irods


- name: Store negotiation key in variable
  set_fact:
    irods_negotiation_key: '{{ negotiation_key.stdout }}'


- name: Generate control plane key
  command: 'openssl rand -hex 16'
  register: control_plane_key
  args:
    creates: /home/{{ ansible_ssh_user }}/setup_irods


- name: Store control plane key in variable
  set_fact:
    irods_control_plane_key: '{{ control_plane_key.stdout }}'


- name: Copy responses for setup_irods.sh
  template:
    src: setup_irods.j2
    dest: /home/{{ ansible_ssh_user }}/setup_irods
    force: no


- name: Configure iRODS iCAT server
  shell:
    /var/lib/irods/packaging/setup_irods.sh < /home/{{ ansible_ssh_user }}/setup_irods
  args:
    creates: /etc/irods/service_account.config
  run_once: true


- name: Enable iCAT port in firewall
  firewalld:
    port: '{{ irods.icat.port }}/tcp'
    permanent: true
    state: enabled
    immediate: yes
  notify: Restart firewall


- name: Enable control plane port in firewall
  firewalld:
    port: '{{ irods.control_plane_port }}/tcp'
    permanent: true
    state: enabled
    immediate: yes
  notify: Restart firewall


- name: Enable iRODS transfer port range in firewall
  firewalld:
    port: '{{ irods.port_range.begin }}-{{ irods.port_range.end }}/tcp'
    permanent: true
    state: enabled
    immediate: yes
  notify: Restart firewall
