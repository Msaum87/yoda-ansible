---
# copyright Utrecht University

- name: Remove users of table user_zones
  become_user: postgres
  become: yes
  command: "psql -c \"DELETE FROM user_zones WHERE user_id IN (SELECT id FROM users WHERE username = '{{ item.name }}') \" extuser"
  ignore_errors: true
  with_items:
    - '{{ delete_ext_test_users }}' 

- name: Remove users of table users
  become_user: postgres
  become: yes
  command: "psql -c \"DELETE FROM users WHERE username = '{{ item.name }}' \" extuser"
  ignore_errors: true
  with_items:
    - '{{ delete_ext_test_users }}'    

- name: Insert users in table users
  become_user: postgres
  become: yes
  command: "psql -c \"INSERT INTO users (id, username, password, creator_time, creator_user, creator_zone) VALUES ('{{ item.id }}', '{{ item.name }}', '{{ item.hash }}', '2018-10-19 14:50:25', 'groupmanager', 'tempZone') \" extuser"
  ignore_errors: true
  with_items:
    - '{{ create_ext_test_users }}'

- name: Insert users in table user_zones
  become_user: postgres
  become: yes
  command: "psql -c \"INSERT INTO user_zones (user_id, inviter_user, inviter_zone, inviter_time) VALUES ('{{ item.id }}', 'groupmanager', 'tempZone', '2018-10-19 14:50:25') \" extuser"
  ignore_errors: true
  with_items:
    - '{{ create_ext_test_users }}'
