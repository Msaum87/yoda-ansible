---
# copyright Utrecht University

- name: Ensure dependencies for Ansible OpenSSL module are installed
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - pyOpenSSL


- name: Ensure an OpenSSL 4096 bits RSA private key is present
  openssl_privatekey:
    path: '{{ openssl_private_dir }}/{{ openssl_private_key }}'
    size: 4096
    type: RSA
    force: False
    state: present


- name: Ensure an OpenSSL certificate signing request is present
  command: >
    openssl req -new
    -key '{{ openssl_private_dir }}/{{ openssl_private_key }}'
    -out '{{ openssl_csr }}' -batch -subj
    '/O={{ openssl_o }}/C={{ openssl_c }}/localityName={{ openssl_localityName }}/commonName={{ yoda_portal_fqdn }}'
  args:
    chdir: '{{ openssl_certs_dir }}'
    creates: '{{ openssl_csr }}'


- name: Ensure an OpenSSL self signed certificate is present
  command: >
    openssl x509 -req -days 365
    -in '{{ openssl_csr }}'
    -signkey '{{ openssl_private_dir }}/{{ openssl_private_key }}'
    -out '{{ openssl_crt }}'
  args:
    chdir: '{{ openssl_certs_dir }}'
    creates: '{{ openssl_crt }}'


- name: Ensure signed private key is present
  command: cp '{{ openssl_private_dir }}/{{ openssl_private_key }}' '{{ openssl_private_dir }}/yoda_signed.pem'
  args:
    creates: '{{ openssl_private_dir }}/yoda_signed.pem'


- name: Ensure signed certificate is present
  command: cp '{{ openssl_certs_dir }}/{{ openssl_crt }}' '{{ openssl_certs_dir }}/yoda_signed.crt'
  args:
    creates: '{{ openssl_certs_dir }}/yoda_signed.crt'
