# {{ ansible_managed }}
# yoda-public-vhost.conf

{% if yoda_public_port != 443 %}
Listen {{ yoda_public_port }}
{% endif %}

<VirtualHost *:{{ yoda_public_port }}>
    DocumentRoot {{ landingpages_root }}
    ServerName {{ yoda_public_fqdn }}
    <Directory {{ landingpages_root }}>
        AllowOverride All
        Require all granted
    </Directory>

    WSGIDaemonProcess moai user={{ yoda_moai_user }} group={{ yoda_moai_user }} processes=2 threads=1
    WSGIProcessGroup moai
    WSGIScriptAlias /oai {{ yoda_moai_home }}/moai.wsgi
    WSGIScriptReloading On

    <Directory {{ yoda_moai_home }}>
        AllowOverride All
        Require all granted
    </Directory>

    # intermediate TLS configuration
    SSLEngine               on
    SSLProtocol             all -SSLv3
    SSLCipherSuite          ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    SSLHonorCipherOrder     on
    SSLCompression          off

    #   Server Certificate:
    #   Point SSLCertificateFile at a PEM encoded certificate.  If
    #   the certificate is encrypted, then you will be prompted for a
    #   pass phrase.  Note that a kill -HUP will prompt again.  A new
    #   certificate can be generated using the genkey(1) command.
    SSLCertificateFile      {{ openssl_certs_dir }}/{{ openssl_crt_signed_and_chain }}

    #   Server Private Key:
    #   If the key is not combined with the certificate, use this
    #   directive to point at the key file.  Keep in mind that if
    #   you've both a RSA and a DSA private key you can configure
    #   both in parallel (to also allow the use of DSA ciphers, etc.)
    SSLCertificateKeyFile   {{ openssl_private_dir }}/{{ openssl_key_signed }}
</VirtualHost>
