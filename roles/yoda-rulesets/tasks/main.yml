---
# copyright Utrecht University

- block:

    - name: Checkout rulesets from github
      git:
        repo: "{{ item.repo }}"
        dest: "/etc/irods/{{ item.name }}"
        version: "{{ item.version }}"
        update: "{{ update_rulesets }}"
      with_items: "{{ rulesets }}"
      register: repochanges


    - name: Run make install for each ruleset
      make:
        chdir: "/etc/irods/{{ item.0.name }}"
        target: install
      when: item.1.changed
      with_together:
        - "{{ rulesets }}"
        - "{{ repochanges.results }}"


    - name: Ensure all rulesets are in server config
      irods_rulesets:
        config_path: "/etc/irods/server_config.json"
        rulesets: "{{ active_rulesets }}"


    - name: Find out if group-manager privilige groups are created
      command: 'iadmin lg'
      register: priv_groups
      changed_when: priv_groups.stdout.find('priv-group-add') == -1

    - name: Configure group-manager privilige groups in iCAT database
      command: '/etc/irods/irods-ruleset-uu/tools/group-manager-setup.sh'
      when: priv_groups.stdout.find('priv-group-add') == -1

    - name: Find out which system collections are present
      command: 'ils /{{ irods_zone }}/yoda'
      ignore_errors: True
      register: system_collections
      
    - name: Ensure yoda system collections are present
      command: "irule -F /etc/irods/irods-ruleset-uu/tools/create-system-collections.r '*enableRevisions={{ enable_revisions }}'"
      register: create_system_collections
      when: (system_collections.stderr.find('does not exist') >= 0) or (system_collections.stdout.find('revisions') == -1 and enable_revisions == 1)
      changed_when: create_system_collections.stdout.find('Creating') >= 0

    - name: Ensure default XML for metadata is installed
      command: "irule -F /etc/irods/irods-ruleset-research/tools/install-default-xml-for-metadata.r '*resc=\"{{ irods_default_resc }}\"' '*default=\"{{ default_yoda_schema }}\"'"
      register: default_xml
      when: system_collections.stdout.find('xsd') == -1
      changed_when: default_xml.stdout.find('Creating') >= 0

    - name: Configure cronjob to copy datapackages to the vault
      cron:
        name: 'copy-accepted-folders-to-vault.r'
        minute: '*/2'
        job: '/bin/irule -F /etc/irods/irods-ruleset-research/tools/copy-accepted-folders-to-vault.r >>$HOME/iRODS/server/log/job_copy-accepted-folder-to-vault.r 2>&1'
   
    - name: Install script for revision clean up
      template:
        src: cronjob-revision-cleanup.sh.j2
        dest: '~{{ irods_service_account }}/.irods/cronjob-revision-cleanup.sh'
        owner: '{{ irods_service_account }}'
        group: '{{ irods_service_account }}'


    - name: Configure cronjob to clean up revisions
      cron:
        name: 'cronjob-revision-cleanup.sh'
        hour: 0
        job: '/bin/bash $HOME/.irods/cronjob-revision-cleanup.sh >> $HOME/iRODS/server/log/cronjob-revision-cleanup.log 2> /dev/null'

  become_user: "{{ irods_service_account }}"
  become: yes

