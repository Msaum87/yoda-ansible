---
# Copyright Utrecht University

- name: Find out if default XSD is installed
  command: 'ils /{{ irods_zone }}/yoda/xsd/default.xsd'
  ignore_errors: True
  register: default_xsd
  changed_when: False
  check_mode: no

- name: Find out if default2datacite.xsl is installed
  command: 'ils /{{ irods_zone }}/yoda/xsl/default2datacite.xsl'
  ignore_errors: True
  register: default_datacite_xsl
  changed_when: False
  check_mode: no

- name: Ensure default XML for metadata is installed
  command: "irule -F /etc/irods/irods-ruleset-research/tools/install-default-xml-for-metadata.r '*resc=\"{{ irods_default_resc }}\"' '*default=\"{{ default_yoda_schema }}\"'"
  register: default_xml
  when: (default_xsd.stderr.find('does not exist') >= 0) or
        (default_datacite_xsl.stderr.find('does not exist') >= 0)
  changed_when: default_xml.stdout.find('Created') >= 0

- name: Configure cronjob to copy datapackages to the vault
  cron:
    name: 'copy-accepted-folders-to-vault.r'
    minute: '*/2'
    job: '/bin/irule -F /etc/irods/irods-ruleset-research/tools/copy-accepted-folders-to-vault.r >>$HOME/iRODS/server/log/job_copy-accepted-folder-to-vault.log 2>&1'


- name: Configure cronjob to ingest changes into vault
  cron:
    name: 'ingest-changes-into-vault.r'
    minute: '*'
    job: '/bin/irule -F /etc/irods/irods-ruleset-research/tools/ingest-changes-into-vault.r >>$HOME/iRODS/server/log/job_ingest-changes-into-vault.log 2>&1'


- name: Configure cronjob to process vault actions
  cron:
    name: 'process-vault-status-transitions.r'
    minute: '*'
    job: '/bin/irule -F /etc/irods/irods-ruleset-research/tools/process-vault-status-transitions.r >>$HOME/iRODS/server/log/job_process-vault-status-transitions.log 2>&1'


- name: Install script for revision clean up
  template:
    src: cronjob-revision-cleanup.sh.j2
    dest: '~{{ irods_service_account }}/.irods/cronjob-revision-cleanup.sh'
    owner: '{{ irods_service_account }}'
    group: '{{ irods_service_account }}'


- name: Copy securecopy.sh to ExecCmd dir
  copy:
    remote_src: yes
    src: /etc/irods/irods-ruleset-research/tools/securecopy.sh
    dest: /var/lib/irods/iRODS/server/bin/cmd/securecopy.sh
    mode: 0755


- name: Configure cronjob to clean up revisions
  cron:
    name: 'cronjob-revision-cleanup.sh'
    hour: 0
    job: '/bin/bash $HOME/.irods/cronjob-revision-cleanup.sh >> $HOME/iRODS/server/log/cronjob-revision-cleanup.log 2> /dev/null'


- name: Find out if DataCite username is set
  command: 'imeta -C ls /{{ irods_zone }}/yoda org_datacite_username'
  register: current_datacite_username
  changed_when: false


- name: Set DataCite username
  command: 'imeta -C set /{{ irods_zone }}/yoda org_datacite_username {{ datacite_username }}'
  when: 
    - current_datacite_username.stdout.find(datacite_username) == -1
    - not ansible_check_mode
  

- name: Find out if DataCite password is set
  command: 'imeta -C ls /{{ irods_zone }}/yoda org_datacite_password'
  register: current_datacite_password
  changed_when: false


- name: Set DataCite password
  command: 'imeta -C set /{{ irods_zone }}/yoda org_datacite_password {{ datacite_password }}'
  when:
    - current_datacite_password.stdout.find(datacite_password) == -1
    - not ansible_check_mode


- name: Find out if public host is set
  command: 'imeta -C ls /{{ irods_zone }}/yoda org_public_host'
  register: current_public_host
  changed_when: false
  

- name: Set public host
  command: 'imeta -C set /{{ irods_zone }}/yoda org_public_host {{ yoda_public_host }}'
  when: 
    - current_public_host.stdout.find(yoda_public_host) == -1
    - upload_priv_key is defined
    - not ansible_check_mode
